        {user ? (
          <>
            {user?.user.role === undefined ? (
              <>
                {/* ************ renter Login start ************/}
                <RentersApp user={user} />
                {/* ************ renter Login end *************/}
              </>
            ) : (
              <>
                {user ? (
                  <>
                    {/* ************ owner Login start ************ */}
                    <OwnerApp user={user} />
                    {/* ************ owner Login end ************ */}
                  </>
                ) : (
                  <>
                    {/* ************ Auth start *************/}
                    <Routes>
                      <Route
                        path="auth"
                        element={user ? <Navigate to="/" /> : <Auth />}
                      />
                      <Route
                        path="*"
                        element={<Navigate to="/auth" replace />}
                      />
                    </Routes>
                    {/* ************ Auth end *************/}
                  </>
                )}
              </>
            )}
          </>
        ) : (
          <>
            <Routes>
              <Route
                path="auth"
                element={user ? <Navigate to="/" /> : <Auth />}
              />
              <Route path="*" element={<Navigate to="/auth" replace />} />
            </Routes>
          </>
        )}





//******************Git commands*******************\\

        …or create a new repository on the command line
echo "# homeFy_v2" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/toukirraju/homeFy_v2.git
git push -u origin main
…or push an existing repository from the command line
git remote add origin https://github.com/toukirraju/homeFy_v2.git
git branch -M main
git push -u origin main
…or import code from another repository
You can initialize this repository with code from a Subversion, Mercurial, or TFS project.





//***********************************FAQ**********************************\\
==>> Why i'm select mongodb in my web project ?
Ans:
MongoDB is a popular NoSQL database that is well-suited for web projects because of its scalability,
performance, and ease of use. It allows for flexible and dynamic schema, which means that the structure 
of the data can change easily as the needs of the project evolve. Additionally, MongoDB has built-in 
support for horizontal scaling, which allows for easy sharding of data across multiple servers. Finally,
its use of JavaScript for querying and indexing makes it a natural fit for web development projects that
are built using JavaScript.

==>> Now a day postgresql is more populer but why you use mongodb insted postgresql ?
Ans:
While PostgreSQL is a powerful and versatile relational database management system (RDBMS), MongoDB is a
document-oriented NoSQL database. Both have their own strengths and use cases, and the choice between the
two will depend on the specific requirements of the project.

One key advantage of MongoDB over PostgreSQL is its ability to handle large amounts of unstructured data,
such as semi-structured data like JSON, and to easily change the structure of the data over time. MongoDB
also has built-in support for horizontal scaling, which allows for easy sharding of data across multiple 
servers. In contrast, PostgreSQL is generally better suited for structured and normalized data, and it can be more challenging to scale horizontally.

On the other hand, PostgreSQL has a more robust set of features for data integrity and consistency, such as
support for transactions and constraints. It also has a larger number of third-party tools and libraries 
available for various use cases such as spatial data analysis, full-text search, and more.

In short, MongoDB is better suited for projects that require high performance and scalability, and that 
deal with unstructured or semi-structured data, while PostgreSQL is better suited for projects that require 
robust data integrity and consistency, and that deal with structured data.